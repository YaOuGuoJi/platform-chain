<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bester.platform.platformchain.dao.UserInfoDao">
    <resultMap id="userInfoEntity" type="com.bester.platform.platformchain.entity.UserInfoEntity">
        <result column="UserId" property="userId"/>
        <result column="UserName" property="userName"/>
        <result column="Sex" property="sex"/>
        <result column="Birthday" property="birthday"/>
        <result column="Phone" property="phone"/>
        <result column="Email" property="email"/>
        <result column="Address" property="address"/>
        <result column="Job" property="job"/>
        <result column="CarId" property="carId"/>
        <result column="Vip" property="vip"/>
        <result column="IdentityId" property="identityId"/>
        <result column="AddTime" property="addTime"/>
        <result column="UpdateTime" property="updateTime"/>
        <result column="BindPublicNum" property="bindPublicNum"/>
    </resultMap>

    <sql id="allFields">
        UserId,
        UserName,
        Sex,
        Birthday,
        Phone,
        Email,
        Address,
        Job,
        CarId,
        Vip,
        IdentityId,
        AddTime,
        UpdateTime,
        BindPublicNum
    </sql>

    <select id="selectById" resultMap="userInfoEntity">
        SELECT
        <include refid="allFields"/>
        FROM user_info
        WHERE UserId=#{userId}
    </select>
    <update id="updateUserInfo">
        update user_info
        set UserName=#{userInfoEntity.userName},
            Sex     = #{userInfoEntity.sex},
            Birthday=#{userInfoEntity.birthday},
            Phone=#{userInfoEntity.phone},
            Email=#{userInfoEntity.email},
            Address=#{userInfoEntity.address},
            Job=#{userInfoEntity.job},
            BindPublicNum=#{userInfoEntity.bindPublicNum},
            UpdateTime=NOW()
        where UserId = #{userInfoEntity.userId}
    </update>

    <insert id="insertUserInfo" parameterType="com.bester.platform.platformchain.entity.UserInfoEntity">
        INSERT INTO user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userInfo.userId != null and userInfo.userId != ''">
                UserId,
            </if>
            <if test="userInfo.userName != null and userInfo.userName != ''">
                UserName,
            </if>
            <if test="userInfo.sex &gt; 0">
                Sex,
            </if>
            <if test="userInfo.birthday != null">
                Birthday,
            </if>
            <if test="userInfo.phone != null and userInfo.phone != ''">
                Phone,
            </if>
            <if test="userInfo.email != null and userInfo.email != ''">
                Email,
            </if>
            <if test="userInfo.address != null and userInfo.address != ''">
                Address,
            </if>
            <if test="userInfo.job != null and userInfo.job != ''">
                Job,
            </if>
            <if test="userInfo.carId &gt; 0">
                CarId,
            </if>
            <if test="userInfo.vip &gt; 0">
                Vip,
            </if>
            <if test="userInfo.identityId != null and userInfo.identityId != ''">
                IdentityId,
            </if>
            AddTime
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <if test="userInfo.userId != null and userInfo.userId !=''">
                #{userInfo.userId},
            </if>
            <if test="userInfo.userName != null and userInfo.userName != ''">
                #{userInfo.userName},
            </if>
            <if test="userInfo.sex &gt; 0">
                #{userInfo.sex},
            </if>
            <if test="userInfo.birthday != null">
                #{userInfo.birthday},
            </if>
            <if test="userInfo.phone != null and userInfo.phone != ''">
                #{userInfo.phone},
            </if>
            <if test="userInfo.email != null and userInfo.email != ''">
                #{userInfo.email},
            </if>
            <if test="userInfo.address != null and userInfo.address != ''">
                #{userInfo.address},
            </if>
            <if test="userInfo.job != null and userInfo.job != ''">
                #{userInfo.job},
            </if>
            <if test="userInfo.carId &gt; 0">
                #{userInfo.carId},
            </if>
            <if test="userInfo.vip &gt; 0">
                #{userInfo.vip},
            </if>
            <if test="userInfo.identityId != null and userInfo.identityId != ''">
                #{userInfo.identityId},
            </if>
            NOW()
        </trim>
    </insert>

    <update id="updateUserVipLevel" parameterType="map">
        UPDATE user_info
        SET Vip=#{level},
            UpdateTime=NOW()
        WHERE UserId=#{userId}
    </update>

    <update id="updateUserBindPublicNum">
        update user_info
        set BindPublicNum=#{bindPublicNum},
            UpdateTime=NOW()
        where UserId=#{userId}
    </update>

</mapper>
