<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bester.platform.platformchain.dao.OreRecordDao">
    <resultMap id="oreRecordEntity" type="com.bester.platform.platformchain.entity.OreRecordEntity">
        <result column="id" property="id"/>
        <result column="UserId" property="userId"/>
        <result column="Source" property="source"/>
        <result column="Ore" property="ore"/>
        <result column="status" property="status"/>
        <result column="AddTime" property="addTime"/>
        <result column="UpdateTime" property="updateTime"/>
    </resultMap>

    <sql id="allFields">
        id,
        UserId,
        Source,
        Ore,
        status,
        AddTime,
        UpdateTime
    </sql>

    <select id="selectMaxUpdateTime" parameterType="map" resultType="java.lang.Integer">
        SELECT
        m.UserId
        FROM
        (SELECT UserId, MAX(UpdateTime) maxTime
        FROM ore_record WHERE status = 1
        GROUP BY UserId) m
        WHERE m.maxTime &lt; #{time}
    </select>

    <update id="updateOverduePower" parameterType="java.util.List">
        UPDATE ore_record
        SET
        status = 0,
        UpdateTime = NOW()
        WHERE status = 2 AND UserId IN
        <foreach collection="userIdList" index="index" item="userId" open="(" close=")" separator=",">
            #{userId}
        </foreach>
    </update>


    <insert id="insertUserOreByInterval">
        INSERT INTO
        ore_record (UserId, Source, Ore, AddTime, UpdateTime, status)
        VALUES (#{userId}, #{source}, #{ore}, NOW(), NOW(), #{status})
    </insert>

    <select id="findGrowingOreByEveryday" resultType="java.lang.Integer">
        SELECT
        COUNT(ore.id)
        FROM ore_record ore
        WHERE ore.status = #{status}
        AND ore.UserId = #{userId}
    </select>

</mapper>
